/*
 * Created by SharpDevelop.
 * User: Valentin
 * Date: 21/10/2025
 * Time: 18:08
 * 
 * To change this template use Tools | Options | Coding | Edit Standard Headers.
 */
using System;

namespace Proyecto_POO
{
	class Program
	{
		public static void CuentaNueva(Banco c, Cuenta p1, Cliente d1){
			Console.WriteLine("Ingrese su numero:");
			p1.Numero = Console.ReadLine();
			Console.WriteLine("Ingrese su apellido");
			p1.Apellido = Console.ReadLine();
			Console.WriteLine("Ingrese su DNI:");
			p1.Dni = Console.ReadLine();
			if (c.ExisteCuenta(p1) == false){
				Console.WriteLine("No tiene una cuenta, debe crearse un cliente nuevo.");
				ClienteNuevo(c, d1);
			}
			Console.WriteLine("Ingrese su saldo");
			p1.Saldo = double.Parse(Console.ReadLine());
			c.AgregarCuenta(p1);
			Console.WriteLine("¡Cuenta agregada con exito!");
		}
		
		public static void EliminarCuentaStatic(Banco c, Cuenta p1){
			Console.WriteLine("Ingrese su numero de cuenta");
			p1.Numero = Console.ReadLine();
			if (c.ExisteCuenta(p1) == true){
				c.EliminarCuenta(p1);
				Console.WriteLine("Cuenta eliminada");
			}
			else{
				Console.WriteLine("La cuenta no existe o el cliente no tiene más cuentas");
				EliminarClienteStatic();
			}
		}
		
		public static void EliminarClienteStatic(){
			
		}
			
		public static void ClienteNuevo(Banco c, Cliente d1){
		 	Console.WriteLine("Ingrese su nombre:");
			d1.NombreC = Console.ReadLine();
			Console.WriteLine("Ingrese su apellido");
			d1.ApellidoC = Console.ReadLine();
			Console.WriteLine("Ingrese su DNI:");
			d1.Dni = Console.ReadLine();
			Console.WriteLine("Ingrese su dirección:");
			d1.Direcccion = Console.ReadLine();
			Console.WriteLine("Ingrese su telefono:");
			d1.Telefono = Console.ReadLine();
			Console.WriteLine("Ingrese su email:");
			d1.Email = Console.ReadLine();
			c.AgregarCliente(d1);
			Console.WriteLine("¡Cliente agregado con éxito!");
		}
		
		public static void ListarClientes(Banco c, int indice){
			string i = "";
			double f = 0;
			foreach(Cliente e in c.listaClientes){
				indice = 0;
				foreach(Cuenta d in c.listaCuentas){
					if(e.Dni == d.Dni){
						indice++;
						i = d.Dni;
						f = d.Saldo;
					}
				}
				if(indice > 1){
						Console.WriteLine("{0}, {1}", i, f);
				}
			}
		}
		
		public static void Main(string[] args)
		{
			/*Listado de clientes que tienen más de una cuenta , indicando nro
de cuenta y saldo de cada una.*/
			string opcion;
			int indice = 0;
			Banco c = new Banco("Banco de los programadores");
			Cuenta p1 = new Cuenta("","","",0);
			Cliente d1 = new Cliente("","","","","","");
			Cuenta p21 = new Cuenta("02","Molina","411223344",11600);
			Cuenta p2 = new Cuenta("01","Molina","411223344",11600);
            Cliente d2 = new Cliente("Valentin","Molina","Av Italia","1127476774","gyokaro@gmail.com","411223344");
            Cuenta p3 = new Cuenta("11","Santa Cruz","55667788",40000);
            Cuenta p31 = new Cuenta("12","Santa Cruz","55667788",40000);
            Cliente d3 = new Cliente("Evelyn","Santa Cruz","Calle EE UU","1133190322","simpsonita@gmail.com", "55667788");
            Cuenta p4 = new Cuenta("21","Dufour","47018550",8900);
            Cliente d4 = new Cliente("Lautaro","Dufour","Av Serbia","1165172012","lautyduf@gmail.com","99001111");
            c.AgregarCliente(d2);
            c.AgregarCuenta(p2);
            c.AgregarCuenta(p21);
            c.AgregarCliente(d3);
            c.AgregarCuenta(p3);
            c.AgregarCuenta(p31);
			do
			{
			Console.WriteLine("¿Qué desea hacer?\n a)Agregar una cuenta\nb)Eliminar una cuenta\nc)Lista de clientes con más de una cuenta");
			opcion = Console.ReadLine();
			switch (opcion){
					case "a": CuentaNueva(c, p1, d1);break;
					case "b": EliminarCuentaStatic(c, p1);break;
					case "c": ListarClientes(c, indice);break;
			}}while(opcion != "f");
		}
	}
}
